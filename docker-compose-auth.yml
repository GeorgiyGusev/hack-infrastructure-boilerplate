name: "minin"

services:


  auth-db:
    image: postgres:latest
    container_name: "auth-database"
    volumes:
      - user_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: minin
      POSTGRES_USER: minin
      POSTGRES_PASSWORD: minin1337
    restart: unless-stopped
    networks:
      - auth

  auth:
    image: quay.io/keycloak/keycloak:25.0
    ports:
      - "8180:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin1337
      KC_PROXY: edge
      DB_DATABASE: minin
      DB_SCHEMA: public
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/minin
      KC_DB_USERNAME: minin
      KC_DB_PASSWORD: minin1337

      PROXY_ADDRESS_FORWARDING: true
    command:
      - start-dev
      - --import-realm
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/opt/keycloak/data/import"
      - "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
    volumes:
      - ./realms:/opt/keycloak/data/import
      - ./keycloak/providers:/opt/keycloak/providers
    networks:
      - app-network
      - traefik
      - auth
    labels:
      # WebUi Config
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.rule=Host(`sso.kowlad.ru`)"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.tls.certresolver=leresolver"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    restart: always


networks:
  traefik:
    name: "traefik-network"
    external: true
  auth:
  app-network:
    driver: bridge

volumes:
  user_data: